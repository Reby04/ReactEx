{"ast":null,"code":"import _slicedToArray from \"/home/vivieb/devel/lottery/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vivieb/devel/lottery/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { ListBiglietti } from \"./lista_biglietti\";\n\nfunction App() {\n  const counter = useRef(2);\n  const inputRef = useRef();\n\n  const _useState = useState([{\n    id: 1,\n    numbers: [1, 2, 3, 4, 5]\n  }, {\n    id: 2,\n    numbers: [6, 7, 8, 9, 10]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const estrazione = [1, 2, 3, 10];\n  const premi = {\n    1: 10,\n    2: 100,\n    3: 1000\n  };\n  const risultati = {};\n  list.forEach(item => {\n    item.numbers.forEach(num => {\n      const included = estrazione.includes(num);\n\n      if (included) {\n        const count = risultati[item.id] || 0;\n        risultati[item.id] = count + 1;\n      }\n    });\n  });\n\n  const addBiglietto = () => {\n    counter.current = counter.current + 1;\n    const id = counter.current;\n    setList(list => [...list, {\n      id: id,\n      numbers: [inputRef.current.value]\n    }]);\n  };\n\n  const removeBiglietto = id => {\n    let newList = [...list];\n    const index = newList.findIndex(item => item.id === id);\n\n    if (index > -1) {\n      newList.splice(index, 1);\n      setList(newList);\n    }\n  };\n\n  const editBiglietto = () => {\n    let newList = [...list];\n    newList.splice(3, 1, 11);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ListBiglietti, {\n    biglietti: list,\n    onRemove: removeBiglietto,\n    edit: editBiglietto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addBiglietto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"button\", {\n    onClick: editBiglietto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"edit\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, Object.entries(risultati).map(([k, v]) => React.createElement(\"div\", {\n    key: k,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, k, \": \", premi[v]))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vivieb/devel/lottery/src/App.js"],"names":["React","useRef","useState","ListBiglietti","App","counter","inputRef","id","numbers","list","setList","estrazione","premi","risultati","forEach","item","num","included","includes","count","addBiglietto","current","value","removeBiglietto","newList","index","findIndex","splice","editBiglietto","Object","entries","map","k","v"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAGJ,MAAM,CAAC,CAAD,CAAtB;AACA,QAAMK,QAAQ,GAAGL,MAAM,EAAvB;;AAFa,oBAIWC,QAAQ,CAAC,CAC/B;AAAEK,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAlB,GAD+B,EAE/B;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb;AAAlB,GAF+B,CAAD,CAJnB;AAAA;AAAA,QAINC,IAJM;AAAA,QAIAC,OAJA;;AASb,QAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAnB;AAEA,QAAMC,KAAK,GAAG;AACZ,OAAG,EADS;AAEZ,OAAG,GAFS;AAGZ,OAAG;AAHS,GAAd;AAMA,QAAMC,SAAS,GAAG,EAAlB;AAEAJ,EAAAA,IAAI,CAACK,OAAL,CAAaC,IAAI,IAAI;AACnBA,IAAAA,IAAI,CAACP,OAAL,CAAaM,OAAb,CAAqBE,GAAG,IAAI;AAC1B,YAAMC,QAAQ,GAAGN,UAAU,CAACO,QAAX,CAAoBF,GAApB,CAAjB;;AAEA,UAAIC,QAAJ,EAAc;AACZ,cAAME,KAAK,GAAGN,SAAS,CAACE,IAAI,CAACR,EAAN,CAAT,IAAsB,CAApC;AACAM,QAAAA,SAAS,CAACE,IAAI,CAACR,EAAN,CAAT,GAAqBY,KAAK,GAAG,CAA7B;AACD;AACF,KAPD;AAQD,GATD;;AAWA,QAAMC,YAAY,GAAG,MAAM;AACzBf,IAAAA,OAAO,CAACgB,OAAR,GAAkBhB,OAAO,CAACgB,OAAR,GAAkB,CAApC;AACA,UAAMd,EAAE,GAAGF,OAAO,CAACgB,OAAnB;AAEAX,IAAAA,OAAO,CAACD,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;AAAEF,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,OAAO,EAAE,CAACF,QAAQ,CAACe,OAAT,CAAiBC,KAAlB;AAAnB,KAAV,CAAT,CAAP;AACD,GALD;;AAOA,QAAMC,eAAe,GAAGhB,EAAE,IAAI;AAC5B,QAAIiB,OAAO,GAAG,CAAC,GAAGf,IAAJ,CAAd;AAEA,UAAMgB,KAAK,GAAGD,OAAO,CAACE,SAAR,CAAkBX,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAAtC,CAAd;;AAEA,QAAIkB,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdD,MAAAA,OAAO,CAACG,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AAEAf,MAAAA,OAAO,CAACc,OAAD,CAAP;AACD;AACF,GAVD;;AAaA,QAAMI,aAAa,GAAG,MAAM;AAC1B,QAAIJ,OAAO,GAAG,CAAC,GAAGf,IAAJ,CAAd;AAEAe,IAAAA,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB;AACC,GAJH;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAElB,IAA1B;AAAgC,IAAA,QAAQ,EAAEc,eAA1C;AAA2D,IAAA,IAAI,EAAEK,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAO,IAAA,GAAG,EAAEtB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,OAAO,EAAEc,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE;AAAQ,IAAA,OAAO,EAAEQ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,OAAP,CAAejB,SAAf,EAA0BkB,GAA1B,CAA8B,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KAC7B;AAAK,IAAA,GAAG,EAAED,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CADH,QACQpB,KAAK,CAACqB,CAAD,CADb,CADD,CADH,CANF,CADF;AAgBD;;AAID,eAAe7B,GAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nimport { ListBiglietti } from \"./lista_biglietti\";\n\nfunction App() {\n  const counter = useRef(2);\n  const inputRef = useRef();\n\n  const [list, setList] = useState([\n    { id: 1, numbers: [1, 2, 3, 4, 5] },\n    { id: 2, numbers: [6, 7, 8, 9, 10] }\n  ]);\n\n  const estrazione = [1, 2, 3, 10];\n\n  const premi = {\n    1: 10,\n    2: 100,\n    3: 1000\n  };\n\n  const risultati = {};\n\n  list.forEach(item => {\n    item.numbers.forEach(num => {\n      const included = estrazione.includes(num);\n\n      if (included) {\n        const count = risultati[item.id] || 0;\n        risultati[item.id] = count + 1;\n      }\n    });\n  });\n\n  const addBiglietto = () => {\n    counter.current = counter.current + 1;\n    const id = counter.current;\n\n    setList(list => [...list, { id: id, numbers: [inputRef.current.value] }]);\n  };\n\n  const removeBiglietto = id => {\n    let newList = [...list];\n\n    const index = newList.findIndex(item => item.id === id);\n\n    if (index > -1) {\n      newList.splice(index, 1);\n\n      setList(newList);\n    }\n  };\n\n\n  const editBiglietto = () => {\n    let newList = [...list];\n\n    newList.splice(3, 1, 11);\n    }\n\n  \n\n  \n\n  return (\n    <div className=\"App\">\n      <ListBiglietti biglietti={list} onRemove={removeBiglietto} edit={editBiglietto}/>\n\n      <input ref={inputRef} />\n      <button onClick={addBiglietto}>add</button>\n      <button onClick={editBiglietto}>edit</button>\n      <div>\n        {Object.entries(risultati).map(([k, v]) => (\n          <div key={k}>\n            {k}: {premi[v]}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}