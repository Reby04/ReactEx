{"ast":null,"code":"import _slicedToArray from \"/home/vivieb/devel/lottery/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vivieb/devel/lottery/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { ListBiglietti } from \"./lista_biglietti\";\n\nfunction App() {\n  const counter = useRef(2);\n  const inputRef = useRef();\n  const editId = useRef(0);\n\n  const _useState = useState([{\n    id: 1,\n    numbers: [1, 2, 3, 4, 5]\n  }, {\n    id: 2,\n    numbers: [6, 7, 8, 9, 10]\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState(['Menta', 'Lampone']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        candy = _useState4[0],\n        setCandy = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bool = _useState6[0],\n        setBool = _useState6[1];\n\n  const estrazione = [1, 2, 3, 10];\n  const premi = {\n    1: 10,\n    2: 100,\n    3: 1000\n  };\n  const risultati = {};\n  list.forEach(item => {\n    item.numbers.forEach(num => {\n      const included = estrazione.includes(num);\n\n      if (included) {\n        const count = risultati[item.id] || 0;\n        risultati[item.id] = count + 1;\n      }\n    });\n  });\n\n  const showCandy = id => {\n    let newList = [...list];\n    const indexList = newList.map(candy);\n    console.log(indexList);\n    setCandy(indexList);\n  };\n\n  const addBiglietto = () => {\n    counter.current = counter.current + 1;\n    const id = counter.current;\n    setList(list => [...list, {\n      id: id,\n      numbers: [inputRef.current.value.split(\",\")]\n    }]);\n  };\n\n  const removeBiglietto = id => {\n    let newList = [...list];\n    const index = newList.findIndex(item => item.id == id);\n\n    if (index > -1) {\n      newList.splice(index, 1);\n      setList(newList);\n    }\n  };\n\n  const updateBiglietto = () => {\n    let newList = [...list];\n    console.log(newList);\n    const indexList = newList.findIndex(index => index.id === editId.current);\n    console.log(indexList);\n    newList[indexList].numbers = [inputRef.current.value.split(\",\")];\n    console.log(inputRef.current.value);\n    setList(newList);\n    setBool(false);\n  };\n\n  const editBiglietto = id => {\n    let newList = [...list];\n    const object = newList.find(cicle => cicle.id === id);\n    inputRef.current.value = object.numbers;\n    console.log(object);\n    setBool(true);\n    editId.current = id;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(ListBiglietti, {\n    biglietti: list,\n    onRemove: removeBiglietto,\n    onEdit: editBiglietto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), !bool && React.createElement(\"button\", {\n    onClick: addBiglietto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"add\"), bool && React.createElement(\"button\", {\n    onClick: updateBiglietto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, Object.entries(risultati).map(([k, v]) => React.createElement(\"div\", {\n    key: k,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, k, \": \", premi[v]))), React.createElement(\"button\", {\n    onClick: showCandy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"show\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vivieb/devel/lottery/src/App.js"],"names":["React","useRef","useState","ListBiglietti","App","counter","inputRef","editId","id","numbers","list","setList","candy","setCandy","bool","setBool","estrazione","premi","risultati","forEach","item","num","included","includes","count","showCandy","newList","indexList","map","console","log","addBiglietto","current","value","split","removeBiglietto","index","findIndex","splice","updateBiglietto","editBiglietto","object","find","cicle","Object","entries","k","v"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAGJ,MAAM,CAAC,CAAD,CAAtB;AACA,QAAMK,QAAQ,GAAGL,MAAM,EAAvB;AACA,QAAMM,MAAM,GAAGN,MAAM,CAAC,CAAD,CAArB;;AAHa,oBAKWC,QAAQ,CAAC,CAC/B;AAAEM,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAlB,GAD+B,EAE/B;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb;AAAlB,GAF+B,CAAD,CALnB;AAAA;AAAA,QAKNC,IALM;AAAA,QAKAC,OALA;;AAAA,qBAUaT,QAAQ,CAAE,CAAC,OAAD,EAAU,SAAV,CAAF,CAVrB;AAAA;AAAA,QAUNU,KAVM;AAAA,QAUCC,QAVD;;AAAA,qBAYWX,QAAQ,CAAC,KAAD,CAZnB;AAAA;AAAA,QAYNY,IAZM;AAAA,QAYAC,OAZA;;AAab,QAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAnB;AAEA,QAAMC,KAAK,GAAG;AACZ,OAAG,EADS;AAEZ,OAAG,GAFS;AAGZ,OAAG;AAHS,GAAd;AAMA,QAAMC,SAAS,GAAG,EAAlB;AAEAR,EAAAA,IAAI,CAACS,OAAL,CAAaC,IAAI,IAAI;AACnBA,IAAAA,IAAI,CAACX,OAAL,CAAaU,OAAb,CAAqBE,GAAG,IAAI;AAC1B,YAAMC,QAAQ,GAAGN,UAAU,CAACO,QAAX,CAAoBF,GAApB,CAAjB;;AAEA,UAAIC,QAAJ,EAAc;AACZ,cAAME,KAAK,GAAGN,SAAS,CAACE,IAAI,CAACZ,EAAN,CAAT,IAAsB,CAApC;AACAU,QAAAA,SAAS,CAACE,IAAI,CAACZ,EAAN,CAAT,GAAqBgB,KAAK,GAAG,CAA7B;AACD;AACF,KAPD;AAQD,GATD;;AAWA,QAAMC,SAAS,GAAGjB,EAAE,IAAI;AACtB,QAAIkB,OAAO,GAAG,CAAC,GAAGhB,IAAJ,CAAd;AACA,UAAMiB,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAYhB,KAAZ,CAAlB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEEd,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACD,GANH;;AAQA,QAAMI,YAAY,GAAG,MAAM;AACzB1B,IAAAA,OAAO,CAAC2B,OAAR,GAAkB3B,OAAO,CAAC2B,OAAR,GAAkB,CAApC;AACA,UAAMxB,EAAE,GAAGH,OAAO,CAAC2B,OAAnB;AAEArB,IAAAA,OAAO,CAACD,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU;AAAEF,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,OAAO,EAAE,CAACH,QAAQ,CAAC0B,OAAT,CAAiBC,KAAjB,CAAuBC,KAAvB,CAA6B,GAA7B,CAAD;AAAnB,KAAV,CAAT,CAAP;AACD,GALD;;AAOA,QAAMC,eAAe,GAAG3B,EAAE,IAAI;AAC5B,QAAIkB,OAAO,GAAG,CAAC,GAAGhB,IAAJ,CAAd;AAEA,UAAM0B,KAAK,GAAGV,OAAO,CAACW,SAAR,CAAkBjB,IAAI,IAAIA,IAAI,CAACZ,EAAL,IAAWA,EAArC,CAAd;;AAEA,QAAI4B,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdV,MAAAA,OAAO,CAACY,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AAEAzB,MAAAA,OAAO,CAACe,OAAD,CAAP;AACD;AACF,GAVD;;AAYA,QAAMa,eAAe,GAAG,MAAM;AAC5B,QAAIb,OAAO,GAAG,CAAC,GAAGhB,IAAJ,CAAd;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,UAAMC,SAAS,GAAGD,OAAO,CAACW,SAAR,CAAkBD,KAAK,IAAIA,KAAK,CAAC5B,EAAN,KAAaD,MAAM,CAACyB,OAA/C,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAD,IAAAA,OAAO,CAACC,SAAD,CAAP,CAAmBlB,OAAnB,GAA6B,CAACH,QAAQ,CAAC0B,OAAT,CAAiBC,KAAjB,CAAuBC,KAAvB,CAA6B,GAA7B,CAAD,CAA7B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAQ,CAAC0B,OAAT,CAAiBC,KAA7B;AAEAtB,IAAAA,OAAO,CAACe,OAAD,CAAP;AAEAX,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAZD;;AAcA,QAAMyB,aAAa,GAAGhC,EAAE,IAAI;AAC1B,QAAIkB,OAAO,GAAG,CAAC,GAAGhB,IAAJ,CAAd;AAEA,UAAM+B,MAAM,GAAGf,OAAO,CAACgB,IAAR,CAAaC,KAAK,IAAIA,KAAK,CAACnC,EAAN,KAAaA,EAAnC,CAAf;AACAF,IAAAA,QAAQ,CAAC0B,OAAT,CAAiBC,KAAjB,GAAyBQ,MAAM,CAAChC,OAAhC;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACA1B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAR,IAAAA,MAAM,CAACyB,OAAP,GAAiBxB,EAAjB;AACC,GARH;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAEE,IADb;AAEE,IAAA,QAAQ,EAAEyB,eAFZ;AAGE,IAAA,MAAM,EAAEK,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,GAAG,EAAElC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQG,CAACQ,IAAD,IAAS;AAAQ,IAAA,OAAO,EAAEiB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARZ,EASGjB,IAAI,IAAI;AAAQ,IAAA,OAAO,EAAEyB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATX,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,CAACC,OAAP,CAAe3B,SAAf,EAA0BU,GAA1B,CAA8B,CAAC,CAACkB,CAAD,EAAIC,CAAJ,CAAD,KAC7B;AAAK,IAAA,GAAG,EAAED,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CADH,QACQ7B,KAAK,CAAC8B,CAAD,CADb,CADD,CADH,CAVF,EAiBE;AAAQ,IAAA,OAAO,EAAEtB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,CADF;AAsBD;;AAED,eAAerB,GAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nimport { ListBiglietti } from \"./lista_biglietti\";\n\nfunction App() {\n  const counter = useRef(2);\n  const inputRef = useRef();\n  const editId = useRef(0);\n\n  const [list, setList] = useState([\n    { id: 1, numbers: [1, 2, 3, 4, 5] },\n    { id: 2, numbers: [6, 7, 8, 9, 10] }\n  ]);\n\n  const [candy, setCandy] = useState (['Menta', 'Lampone']);\n\n  const [bool, setBool] = useState(false);\n  const estrazione = [1, 2, 3, 10];\n\n  const premi = {\n    1: 10,\n    2: 100,\n    3: 1000\n  };\n\n  const risultati = {};\n\n  list.forEach(item => {\n    item.numbers.forEach(num => {\n      const included = estrazione.includes(num);\n\n      if (included) {\n        const count = risultati[item.id] || 0;\n        risultati[item.id] = count + 1;\n      }\n    });\n  });\n\n  const showCandy = id => {\n    let newList = [...list];\n    const indexList = newList.map(candy);\n    console.log(indexList);\n   \n      setCandy(indexList);\n    }\n\n  const addBiglietto = () => {\n    counter.current = counter.current + 1;\n    const id = counter.current;\n\n    setList(list => [...list, { id: id, numbers: [inputRef.current.value.split(\",\")]}]);\n  };\n\n  const removeBiglietto = id => {\n    let newList = [...list];\n\n    const index = newList.findIndex(item => item.id == id);\n\n    if (index > -1) {\n      newList.splice(index, 1);\n\n      setList(newList);\n    }\n  };\n\n  const updateBiglietto = () => {\n    let newList = [...list];\n    console.log(newList);\n\n    const indexList = newList.findIndex(index => index.id === editId.current);\n    console.log(indexList);\n    newList[indexList].numbers = [inputRef.current.value.split(\",\")];\n    console.log(inputRef.current.value);\n    \n    setList(newList);\n\n    setBool(false);\n  };\n\n  const editBiglietto = id => {\n    let newList = [...list];\n\n    const object = newList.find(cicle => cicle.id === id);\n    inputRef.current.value = object.numbers;\n    console.log(object);\n    setBool(true);\n    editId.current = id;\n    };\n\n  return (\n    <div className=\"App\">\n      <ListBiglietti\n        biglietti={list}\n        onRemove={removeBiglietto}\n        onEdit={editBiglietto}\n      />\n\n      <input ref={inputRef}/>\n      {!bool && <button onClick={addBiglietto}>add</button>}\n      {bool && <button onClick={updateBiglietto}>save</button>}\n      <div>\n        {Object.entries(risultati).map(([k, v]) => (\n          <div key={k}>\n            {k}: {premi[v]}\n          </div>\n        ))}\n      </div>\n      <button onClick={showCandy}>show</button>\n     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}